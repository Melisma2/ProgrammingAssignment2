x <- matrix(1:6, 2, 3)
x
x[,1]
x[1,]
x[1, , FALSE]
x[1,,drop=false]
x[1,,drop=FALSE]
y <- c(1, 2, NA, 4, NA, 5)
good <- !is.na(y)
y(good)
y[good]
y[!good]
library(swirl)
swirl()
x<- x(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <-rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
library(swirl)
install_from_swirl("Open Intro")
swirl()
swirl()
?figure margins
?figuremargins
plot.new()
?par
par
par(mar = rep(2, 4))
swirl()
intall.packages("KernSmooth")
install.packages("Kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
add2 <- function(x, y) {
x+y
}
add2(2, 3)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(12)
above(x, 12)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numberic(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
cube <- function(x, n) {}
cube <- function(X, n) {}
cube <- function(x, n) {x^3}
cube(3)
x <- 1:10
if(x>5) {x<-0}
f <- function {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
search()
library(datasets)
data(iris)
?iris
head(iris)
View(iris)
s <- split(iris, iris$Species)
sapply(s, function() colMeans("Speal.Length")
library(datasets)
data(iris)
head(iris)
View(iris)
s <- split(iris, iris$Species)
?colmeans
?colMeans
sapply(s, function() colMeans(iris, [,"Sepal.Length"]))
sapply(s, function() colMeans(iris, iris$Sepal.Length))
sapply(s, function() colMeans(iris, 1))
sapply(s, function() colMeans(iris, dims = 1))
sapply(s, function(x) colMeans(x, iris$Sepal.Length))
sapply(s, function(x) colMeans(iris))
sapply(s, function(x), colMeans(s, dims = 1))
sapply(s, function(x), colMeans(s))
sapply(s, function(x) colMeans(s, dims=1)
library(datasets)
data(iris)
head(iris)
s <- split(iris, iris$Species)
sapply(s, function(x) colMeans(x, [,c("Speal.Length", "Speal.Width", "Petal.Length")]))
sapply(s, function(x) colMeans(x[,c("Sepal.Length", "Petal.Length")])
)
sapply(s, function(x) colMeans(x[,"Sepal.Length"]))
sapply(s, function(x) colMeans)
sapply(s, function(x) colMeans(x[,s$Sepal.Length]))
sapply(s, function(x) colMeans(x[,("Sepal.Length")]))
?colMeans
sapply(s, function(x) colMeans(x$Sepal.Length))
sapply(s, function(x) colMeans(x[,Sepal.Length]))
sapply(s, function(x) colMeans(x[,"Sepal.Length"]))
sapply(s, function(x) mean(s$Sepal.Length))
sapply(s, mean, s$Sepal.Length)
lapply(split(iris, s), mean, iris$Sepal.Length)
apply(iris[,1:4], 2, mean)
apply(iris[,1:4], 1, mean)
?apply
data(mtcars)
?mtcars
head(mtcars)
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
?with
with(mtcars, tapply(hp, cyl, mean))
209.21429 - 82.63636
tapply(iris, s, mean)
y
tapply(iris, iris$Species, mean)
?tapply
tapply(iris, s, mean)
setwd("~/Rdocs/Assignment2/ProgrammingAssignment2")
i <- NULL
source('~/.active-rstudio-document')
mat <- matrix(1:4, 2, 2)
solve(mat)
matrixObject <- makeCacheMatrix(mat)
source('~/.active-rstudio-document')
matrixObject <- makeCacheMatrix(mat)
?"$"
source('~/.active-rstudio-document')
matrixObject <- makeCacheMatrix(mat)
source('~/.active-rstudio-document')
matrixObject <- makeCacheMatrix(mat)
source('~/.active-rstudio-document')
matrixobject <- makeCacheMatrix(mat)
cachecolve(mat)
cachesolve(mat)
cacheSolve(mat)
source('~/.active-rstudio-document')
cacheSolve(mat)
source('~/.active-rstudio-document')
cacheSolve(mat)
source('~/.active-rstudio-document')
cacheSolve(mat)
cacheSolve(matrixobject)
source('~/.active-rstudio-document')
cachesolve(matrixobject)
cacheSolve(matrixobject)
cacheSolve(matrixobject)
source('~/.active-rstudio-document')
makeCacheMatrix(mat)
source('~/Rdocs/Assignment2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(mat)
source('~/Rdocs/Assignment2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(mat)
source('~/Rdocs/Assignment2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(mat)
source('~/Rdocs/Assignment2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(mat)
test <- matrix(1:4, 2, 2)
solve(test)
makeCacheMatrix(test)
source('~/Rdocs/Assignment2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(test)
mat <- matrix(1:4, 2, 2)
source('~/Rdocs/Assignment2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(mat)
source('~/.active-rstudio-document')
mat <- matrix(1:4, 2, 2)
makeCacheMatrix(mat)
makeCacheMatrix(mat)
source('~/.active-rstudio-document')
makeCacheMatrix(mat)
source('~/Rdocs/Assignment2/ProgrammingAssignment2/cachematrix.R')
matobject <- makeCacheMatrix(mat)
cacheSolve(matobject)
cacheSolve(matobject)
source('~/Rdocs/Assignment2/ProgrammingAssignment2/cachematrix.R')
